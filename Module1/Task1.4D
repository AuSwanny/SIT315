const uint8_t btn2_pin = 2;
const uint8_t btn3_pin = 3;
const uint8_t led2_pin = 13;
const uint8_t led3_pin = 12;

const uint8_t led4_pin = 11;
const uint8_t led5_pin = 10;
const uint8_t led6_pin = 9;
const uint8_t led7_pin = 8;
const uint8_t led8_pin = 7;

uint8_t led2_state = LOW;
uint8_t led3_state = LOW;

uint8_t led4_state = LOW;
uint8_t led5_state = LOW;
uint8_t led6_state = LOW;
uint8_t led7_state = LOW;
uint8_t led8_state = LOW;

const uint8_t btn4_pin = 0;

bool btn4_state = LOW;

void setup()
{
  TCCR1A = 0;
  TCCR1B = 0;
  
  TCCR1B |= B00000100;
  
  TIMSK1 |= B00000010;
  
  OCR1A = 31250;
  sei();
  
  
  Serial.begin(9600);
  
  pinMode(btn2_pin, INPUT_PULLUP);
  pinMode(led2_pin, OUTPUT);
  
  attachInterrupt(digitalPinToInterrupt(btn2_pin),toggle2, FALLING);
  
  pinMode(btn3_pin, INPUT_PULLUP);
  pinMode(led3_pin, OUTPUT);
  
  attachInterrupt(digitalPinToInterrupt(btn3_pin),toggle3, FALLING);
  
  
  
  pinMode(btn4_pin, INPUT_PULLUP);
  
  PCICR |= B00000100;	//Enable PCMSK1 (Group 1: PCINT8 to PCINT14)
  PCMSK2 |= B00000001;	//A0 will triggler interrupt
  
  
}

void loop()
{
  delay(500);
  led4_state = !led4_state;
  digitalWrite(led4_pin, led4_state);
  delay(500);
  led5_state = !led5_state;
  digitalWrite(led5_pin, led5_state);
  delay(500);
  led6_state = !led6_state;
  digitalWrite(led6_pin, led6_state);
}

void toggle2() {
  led2_state = !led2_state;
  digitalWrite(led2_pin, led2_state);
  
  if (led2_state == HIGH){
    Serial.println("LED2 on");
  } else {
    Serial.println("LED2 off");
  }
}

void toggle3() {
  led3_state = !led3_state;
  digitalWrite(led3_pin, led3_state);
  
  if (led3_state == HIGH){
    Serial.println("LED3 on");
  } else {
    Serial.println("LED3 off");
  }
}

ISR (PCINT2_vect){
  btn4_state = !btn4_state;
  if (btn4_state)
  {
  	led7_state = !led7_state;
 	 digitalWrite(led7_pin, led7_state);
  
 	 if(led7_state){
 	   Serial.println("PCINT LED on"); // testing line
 	 }
 	 else
 	   Serial.println("PCINT LED off"); // testing line
  }
}

ISR(TIMER1_COMPA_vect){
  TCNT1 = 0;
  led8_state = !led8_state;
  digitalWrite(led8_pin, led8_state);
}

// https://github.com/AuSwanny/SIT315/blob/main/Module1/Task1.4D
